#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Jul 11, 2018 09:04:28 AM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    gui_support.set_Tk_var()
    top = New_Toplevel (root)
    gui_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    gui_support.set_Tk_var()
    top = New_Toplevel (w)
    gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+418+146")
        top.title("New Toplevel")
        top.configure(highlightcolor="black")



        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.03, rely=0.11, relheight=0.83
                , relwidth=0.92)
        self.TNotebook1.configure(width=552)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Dispositivo", compound="left", underline="-1"
                ,)

        self.Entry1 = Entry(self.TNotebook1_t0)
        self.Entry1.place(relx=0.35, rely=0.33,height=32, relwidth=0.41)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(justify=CENTER)
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(textvariable=gui_support.mac)

        self.Label2 = Label(self.TNotebook1_t0)
        self.Label2.place(relx=0.47, rely=0.21, height=35, width=86)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Indirizzo''')

        self.Button1 = Button(self.TNotebook1_t0)
        self.Button1.place(relx=0.11, rely=0.33, height=38, width=101)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(command=gui_support.connetti)
        self.Button1.configure(text='''Connetti''')

        self.Label1 = Label(top)
        self.Label1.place(relx=0.05, rely=0.02, height=28, width=536)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(textvariable=gui_support.Messaggio)






if __name__ == '__main__':
    vp_start_gui()



